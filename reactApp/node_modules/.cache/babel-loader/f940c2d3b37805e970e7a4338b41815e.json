{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/wdmProject/reactApp/src/components/RoleBasedRouting.js\";\nimport { Route } from \"react-router-dom\";\nimport grantPermission from '../grantPermission';\nimport Unauthorized from './Unauthorized';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RoleBasedRouting = _ref => {\n  let {\n    component: Component,\n    roles,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [grantPermission(roles) && /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), !grantPermission(roles) && /*#__PURE__*/_jsxDEV(Route, {\n      render: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Unauthorized, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = RoleBasedRouting;\nexport default RoleBasedRouting;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleBasedRouting\");","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/wdmProject/reactApp/src/components/RoleBasedRouting.js"],"names":["Route","grantPermission","Unauthorized","RoleBasedRouting","component","Component","roles","rest","props"],"mappings":";AACA,SACEA,KADF,QAEO,kBAFP;AAGA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAEA,MAAMC,gBAAgB,GAAG,QAEjB;AAAA,MAFkB;AACtBC,IAAAA,SAAS,EAAEC,SADW;AACAC,IAAAA,KADA;AACO,OAAGC;AADV,GAElB;AACJ,sBACE;AAAA,eACIN,eAAe,CAACK,KAAD,CAAf,iBACF,QAAC,KAAD,OACMC,IADN;AAEE,MAAA,MAAM,EAAGC,KAAD,iBACN;AAAA,+BACE,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAHJ;AAAA;AAAA;AAAA;AAAA,YAFF,EAYI,CAACP,eAAe,CAACK,KAAD,CAAhB,iBACE,QAAC,KAAD;AACE,MAAA,MAAM,EAAE,mBACN;AAAA,+BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAbN;AAAA,kBADF;AAyBD,CA5BH;;KAAMH,gB;AA+BN,eAAeA,gBAAf","sourcesContent":["\nimport {\n  Route\n} from \"react-router-dom\";\nimport grantPermission from '../grantPermission';\nimport Unauthorized from './Unauthorized';\n\nconst RoleBasedRouting = ({\n    component: Component, roles, ...rest\n  }) => {\n    return (\n      <>\n        { grantPermission(roles) && (\n        <Route\n          {...rest}\n          render={(props) => (\n            <>\n              <Component {...props} />\n            </>\n          )}\n        />\n        )}\n        {\n          !grantPermission(roles) && (\n            <Route\n              render={() => (\n                <>\n                  <Unauthorized />\n                </>\n              )}\n            />\n          )\n        }\n      </>\n    );\n  };\n\n  \nexport default RoleBasedRouting;\n"]},"metadata":{},"sourceType":"module"}